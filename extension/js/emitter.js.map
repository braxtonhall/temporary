{"version":3,"file":"emitter.js","mappings":";;;;;;;;;;AAAa;AACb,kBAAkB;AAClB,qBAAqB,GAAG,yBAAyB;AACjD;AACA,yBAAyB;AACzB;AACA,qBAAqB;;;;;;;UCNrB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb,kBAAkB;AAClB,kBAAkB,mBAAO,CAAC,uCAAc;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,iCAAiC;AACtE;AACA;AACA,CAAC","sources":["webpack:///./ts/constants.ts","webpack:///webpack/bootstrap","webpack:///./ts/services/renderFormEmitter.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.RELEVANT_TAGS = exports.FORM_RENDER_EVENT = void 0;\nvar FORM_RENDER_EVENT = \"library-thing-form-rendered\";\nexports.FORM_RENDER_EVENT = FORM_RENDER_EVENT;\nvar RELEVANT_TAGS = [\"textarea\", \"input\", \"select\"];\nexports.RELEVANT_TAGS = RELEVANT_TAGS;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\"use strict\";\nexports.__esModule = true;\nvar constants_1 = require(\"../constants\");\nvar tryToEmit = function () {\n    // This is relying on the fact that when the edit form is available, the html matches this selector,\n    // and fails to match in all other cases. This IS brittle. If LibraryThing changes\n    // the markup in any way this will just not work\n    if (document.querySelector(\"#book_editForm > .book_bit\")) {\n        window.dispatchEvent(new Event(constants_1.FORM_RENDER_EVENT));\n    }\n};\nvar observer = new MutationObserver(tryToEmit);\nwindow.addEventListener(\"load\", function () {\n    var editForm = document.getElementById(\"book_editForm\");\n    if (editForm) {\n        observer.observe(editForm, { subtree: false, childList: true });\n        tryToEmit();\n    }\n});\n"],"names":[],"sourceRoot":""}